<?php

	namespace api\models;
	
	use Yii;
	use yii\base\Model;
	use yii\base\models;
	use common\models\User;
	
	class LoginForm extends Model
	{
		public $username;
		public $password;
		
		private $_user;
		
		//自定义
		const GET_API_TOKEN = 'generate_api_token';
		
		
		/**
		 * 初始化登录
		 */
		public function init ()
		{
			parent::init(); // TODO: Change the autogenerated stub
			$this->on(self::GET_API_TOKEN, [$this, 'onGenerateApiToken']);
		}
		
		/**
		 * @return array
		 * 验证规则
		 */
		public function rules ()
		{
			return [
				//注意拼写
				[['username', 'password'], 'required'],
				['password', 'validatePassword'],
			];
		}
		
		/**
		 * @param $attribute
		 * @param $params
		 * 验证用户登录或则其他
		 */
		public function validatePassword($attribute, $params)
		{
			//判断是否发生错误
			if (!$this->hasErrors()){
				$this->_user = $this->getUser();
				//判断是否用户名或者密码错误，只要有一个错误就直接返回错误信息
				if (!$this->_user || !$this->_user->validatePassword($this->password)){
					$this->addErrors($attribute, '用户名或者密码错误');
				}
			}
		}
		
		/**
		 * @return array
		 */
		public function attributeLabels ()
		{
			return [
				'username'  => '用户名',
				'password'  =>  '密码',
			];
		}
		
		/**
		 * @return null
		 */
		public function login()
		{
			//触发生成token
			if ($this->validate()){
				$this->trigger(self::GET_API_TOKEN);
				return $this->_user;
			}else{
				return null;
			}
		}
		
		/**
		 * 根据用户名获取用户认证信息
		 * @return null|static
		 *
		 */
		protected function getUser()
		{
			//如果没有token则说明产生错误
			if ($this->_user === null){
				$this->_user = User::findByUsername($this->username);
			}
			
			return $this->_user;
		}
		
		/**
		 * 1 登录验证校验成功后，为新用户生成新的token
		 * 2 如果token失效，曾重新生成新的token
		 */
		public function onGenerateApiToken()
		{
			if (!User::apiTokenIsValid($this->_user->api_token)){
				$this->_user->generateApiToken();
				$this->_user->save(false);
			}
		}
	}
	

	
	